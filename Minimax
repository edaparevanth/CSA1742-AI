ROWS = 6
COLS = 7

def create_board():
    return [[' ' for _ in range(COLS)] for _ in range(ROWS)]

def print_board(board):
    print("\n  " + "   ".join(str(i) for i in range(COLS)))
    print("+" + "---+" * COLS)
    for row in board:
        print("| " + " | ".join(row) + " |")
        print("+" + "---+" * COLS)

def is_valid_location(board, col):
    return board[0][col] == ' '

def get_next_open_row(board, col):
    for r in reversed(range(ROWS)):
        if board[r][col] == ' ':
            return r
    return None

def drop_piece(board, row, col, piece):
    board[row][col] = piece

def check_win(board, piece):
    # Check horizontal
    for r in range(ROWS):
        for c in range(COLS - 3):
            if all(board[r][c + i] == piece for i in range(4)):
                return True
    # Check vertical
    for r in range(ROWS - 3):
        for c in range(COLS):
            if all(board[r + i][c] == piece for i in range(4)):
                return True
    # Check positively sloped diagonals
    for r in range(ROWS - 3):
        for c in range(COLS - 3):
            if all(board[r + i][c + i] == piece for i in range(4)):
                return True
    # Check negatively sloped diagonals
    for r in range(3, ROWS):
        for c in range(COLS - 3):
            if all(board[r - i][c + i] == piece for i in range(4)):
                return True
    return False

def is_full(board):
    return all(board[0][c] != ' ' for c in range(COLS))

def play_game():
    board = create_board()
    game_over = False
    turn = 0

    print("Welcome to Connect Four!")
    print_board(board)

    while not game_over:
        piece = 'X' if turn % 2 == 0 else 'O'
        try:
            col = int(input(f"Player {piece}, choose column (0-{COLS-1}): "))
        except ValueError:
            print("Invalid input.")
            continue

        if 0 <= col < COLS and is_valid_location(board, col):
            row = get_next_open_row(board, col)
            drop_piece(board, row, col, piece)

            print_board(board)

            if check_win(board, piece):
                print(f"Player {piece} wins!")
                game_over = True
            elif is_full(board):
                print("It's a draw!")
                game_over = True
            else:
                turn += 1
        else:
            print("Invalid move. Try another column.")

# Start the game
play_game()
