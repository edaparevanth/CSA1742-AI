def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 5)
    print("\n")

def check_win(board, player):
    # Check rows, columns and diagonals
    for i in range(3):
        if all(cell == player for cell in board[i]):  # Row
            return True
        if all(board[j][i] == player for j in range(3)):  # Column
            return True

    # Diagonals
    if all(board[i][i] == player for i in range(3)):
        return True
    if all(board[i][2 - i] == player for i in range(3)):
        return True

    return False

def is_full(board):
    return all(cell != ' ' for row in board for cell in row)

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current = 'X'

    while True:
        print_board(board)
        print(f"Player {current}'s turn.")
        
        try:
            row = int(input("Enter row (0-2): "))
            col = int(input("Enter col (0-2): "))
        except ValueError:
            print("Please enter numbers only.")
            continue

        if row not in range(3) or col not in range(3):
            print("Invalid move. Try again.")
            continue
        if board[row][col] != ' ':
            print("Cell already taken. Try another.")
            continue

        board[row][col] = current

        if check_win(board, current):
            print_board(board)
            print(f"Player {current} wins!")
            break
        elif is_full(board):
            print_board(board)
            print("It's a draw!")
            break

        # Switch player
        current = 'O' if current == 'X' else 'X'

# Start the game
play_game()
