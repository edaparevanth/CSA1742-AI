def alphabeta(node, depth, alpha, beta, maximizingPlayer, values, tree):
    if depth == 0 or node not in tree:
        print(f"Evaluating leaf {node} â†’ {values[node]}")
        return values[node]

    if maximizingPlayer:
        max_eval = float('-inf')
        for child in tree[node]:
            eval = alphabeta(child, depth - 1, alpha, beta, False, values, tree)
            max_eval = max(max_eval, eval)
            alpha = max(alpha, eval)
            if beta <= alpha:
                print(f"Pruned at {node} (max)")
                break
        return max_eval
    else:
        min_eval = float('inf')
        for child in tree[node]:
            eval = alphabeta(child, depth - 1, alpha, beta, True, values, tree)
            min_eval = min(min_eval, eval)
            beta = min(beta, eval)
            if beta <= alpha:
                print(f"Pruned at {node} (min)")
                break
        return min_eval
